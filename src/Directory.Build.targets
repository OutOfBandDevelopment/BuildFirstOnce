<Project>
  <!-- 
	when `dotnet clean` is not clean enough... 
	`dotnet clean /T:DeepClean` ensures all of the build and intermediate files are removed 
	-->
  <Target Name="DeepClean">
    <Message Text="===== Really cleaning project: $(Configuration) - &quot;$(MSBuildProjectName)&quot;"  Importance="high"/>
    <Message Text="===== SolutionDir: $(SolutionDir)"  Importance="high"/>
    <RemoveDir Directories="$(BaseIntermediateOutputPath)" Condition="Exists('$(BaseIntermediateOutputPath)')" ContinueOnError="true" />
    <RemoveDir Directories="$(BaseOutputPath)" Condition="Exists('$(BaseOutputPath)')" ContinueOnError="true" />
    <RemoveDir Directories="$(TestResultsOutFolderPath)" Condition="Exists('$(TestResultsOutFolderPath)')" ContinueOnError="true" />
  </Target>
  <!-- 
	when `dotnet clean` is not clean enough... 
	`dotnet clean /T:CleanPaths` ensures all empty folders are deleted as well
	-->
  <Target Name="CleanPaths">
    <Message Text="===== Check: $(SolutionDir)"  Importance="high"/>
    <ItemGroup>
      <Directories Include="$([System.IO.Directory]::GetDirectories('$(SolutionDir)', '*', System.IO.SearchOption.AllDirectories))" />
      <Directories>
        <Files>$([System.IO.Directory]::GetFiles("%(Directories.Identity)", "*", System.IO.SearchOption.AllDirectories).get_Length())</Files>
      </Directories>
    </ItemGroup>
    <RemoveDir Directories="@(Directories)" Condition="%(Files)=='0'" />
  </Target>
</Project>